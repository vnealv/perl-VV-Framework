version: "3.2"

services:
  # The registry for all local images
  registry:
    image: registry:2
    restart: unless-stopped
    ports:
      - "5002:5002"
    environment:
      # REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
      # REGISTRY_HTTP_TLS_KEY: /certs/domain.key
      # REGISTRY_AUTH: htpasswd
      # REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      # REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
      REGISTRY_HTTP_SECRET: "${REGISTRY_SECRET}"
      REGISTRY_PROXY_REMOTEURL: https://registry-1.docker.io
      REGISTRY_PROXY_USERNAME: circle4regentmarkets
      REGISTRY_PROXY_PASSWORD: "${DOCKERHUB_PASSWORD}"
    volumes:
      - ./registry/data:/var/lib/registry
      - ./registry/certs:/certs:ro
      - ./registry/auth:/auth

  # Full Redis cluster - add more nodes to scale horizontally, ensure that
  # the REDIS_NODES env var is correctly populated to make sure they
  # are all picked up correctly. Note that this should be able to adapt
  # to docker networking changes - on restart the nodes are rediscovered.
  redis-node-0:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - redis
    volumes:
      - redis-cluster_data-0:/bitnami
    environment:
      - "REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"
      - "REDIS_CLUSTER_CREATOR=1"

  redis-node-1:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - redis
    volumes:
      - redis-cluster_data-1:/bitnami
    environment:
      - "REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"

  redis-node-2:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - redis
    volumes:
      - redis-cluster_data-2:/bitnami
    environment:
      - "REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"

  redis-node-3:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - redis
    volumes:
      - redis-cluster_data-3:/bitnami
    environment:
      - "REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"

  redis-node-4:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - redis
    volumes:
      - redis-cluster_data-4:/bitnami
    environment:
      - "REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"

  redis-node-5:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - redis
    volumes:
      - redis-cluster_data-5:/bitnami
    environment:
      - "REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"

  # ... end of Redis node list here


  # Start list of services

  caffeine-manager_api:
    build: services/caffeine-manager/api
    init: true
    tty: true
    restart: unless-stopped
    environment:
      APP: "caffeine-manager"
      CLUSTER: "1"
      DATABASE: "caffeine-manager-api"
      LIBRARY: "/app/lib"
      LOG_LEVEL: "info"
      SERVICE_NAME: "Service::API"
      TRANSPORT: "redis://redis-node-0:6379"
    ports:
      - "80:80"
    networks:
      - default
      - backend
      - redis
      - database
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
    volumes:
      - ./services/caffeine-manager/api:/app/
      - ./pg_service.conf:/root/.pg_service.conf:ro

  # Dedicated Database for each service.

#  pg-caffeine-manager-api:
#    image: docker.io/bitnami/postgresql-repmgr:13-debian-10
#    ports:
#      - 5432
#    volumes:
#      - pg-caffeine-manager-api-data:/bitnami/postgresql
#    networks:
#      - database
#    environment:
#      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
#      - POSTGRESQL_USERNAME=customuser
#      - POSTGRESQL_PASSWORD=custompassword
#      - POSTGRESQL_DATABASE=customdatabase
  caffeine-manager_coffee:
    build: services/caffeine-manager/coffee
    init: true
    tty: true
    restart: unless-stopped
    environment:
      APP: "caffeine-manager"
      CLUSTER: "1"
      DATABASE: "caffeine-manager-coffee"
      LIBRARY: "/app/lib"
      LOG_LEVEL: "info"
      SERVICE_NAME: "Service::Coffee"
      TRANSPORT: "redis://redis-node-0:6379"
    networks:
      - default
      - backend
      - redis
      - database
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
    volumes:
      - ./services/caffeine-manager/coffee:/app/
      - ./pg_service.conf:/root/.pg_service.conf:ro

  # Dedicated Database for each service.

#  pg-caffeine-manager-coffee:
#    image: docker.io/bitnami/postgresql-repmgr:13-debian-10
#    ports:
#      - 5432
#    volumes:
#      - pg-caffeine-manager-coffee-data:/bitnami/postgresql
#    networks:
#      - database
#    environment:
#      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
#      - POSTGRESQL_USERNAME=customuser
#      - POSTGRESQL_PASSWORD=custompassword
#      - POSTGRESQL_DATABASE=customdatabase
  caffeine-manager_machine:
    build: services/caffeine-manager/machine
    init: true
    tty: true
    restart: unless-stopped
    environment:
      APP: "caffeine-manager"
      CLUSTER: "1"
      DATABASE: "caffeine-manager-machine"
      LIBRARY: "/app/lib"
      LOG_LEVEL: "info"
      SERVICE_NAME: "Service::Machine"
      TRANSPORT: "redis://redis-node-0:6379"
    networks:
      - default
      - backend
      - redis
      - database
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
    volumes:
      - ./services/caffeine-manager/machine:/app/
      - ./pg_service.conf:/root/.pg_service.conf:ro

  # Dedicated Database for each service.

#  pg-caffeine-manager-machine:
#    image: docker.io/bitnami/postgresql-repmgr:13-debian-10
#    ports:
#      - 5432
#    volumes:
#      - pg-caffeine-manager-machine-data:/bitnami/postgresql
#    networks:
#      - database
#    environment:
#      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
#      - POSTGRESQL_USERNAME=customuser
#      - POSTGRESQL_PASSWORD=custompassword
#      - POSTGRESQL_DATABASE=customdatabase
  caffeine-manager_stats:
    build: services/caffeine-manager/stats
    init: true
    tty: true
    restart: unless-stopped
    environment:
      APP: "caffeine-manager"
      CLUSTER: "1"
      DATABASE: "caffeine-manager-stats"
      LIBRARY: "/app/lib"
      LOG_LEVEL: "info"
      SERVICE_NAME: "Service::Stats"
      TRANSPORT: "redis://redis-node-0:6379"
    networks:
      - default
      - backend
      - redis
      - database
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
    volumes:
      - ./services/caffeine-manager/stats:/app/
      - ./pg_service.conf:/root/.pg_service.conf:ro

  # Dedicated Database for each service.

#  pg-caffeine-manager-stats:
#    image: docker.io/bitnami/postgresql-repmgr:13-debian-10
#    ports:
#      - 5432
#    volumes:
#      - pg-caffeine-manager-stats-data:/bitnami/postgresql
#    networks:
#      - database
#    environment:
#      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
#      - POSTGRESQL_USERNAME=customuser
#      - POSTGRESQL_PASSWORD=custompassword
#      - POSTGRESQL_DATABASE=customdatabase
  caffeine-manager_user:
    build: services/caffeine-manager/user
    init: true
    tty: true
    restart: unless-stopped
    environment:
      APP: "caffeine-manager"
      CLUSTER: "1"
      DATABASE: "caffeine-manager-user"
      LIBRARY: "/app/lib"
      LOG_LEVEL: "info"
      SERVICE_NAME: "Service::User"
      TRANSPORT: "redis://redis-node-0:6379"
    networks:
      - default
      - backend
      - redis
      - database
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
    volumes:
      - ./services/caffeine-manager/user:/app/
      - ./pg_service.conf:/root/.pg_service.conf:ro

  # Dedicated Database for each service.

#  pg-caffeine-manager-user:
#    image: docker.io/bitnami/postgresql-repmgr:13-debian-10
#    ports:
#      - 5432
#    volumes:
#      - pg-caffeine-manager-user-data:/bitnami/postgresql
#    networks:
#      - database
#    environment:
#      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
#      - POSTGRESQL_USERNAME=customuser
#      - POSTGRESQL_PASSWORD=custompassword
#      - POSTGRESQL_DATABASE=customdatabase
  coffee-drinkers_heavydrinker:
    build: services/coffee-drinkers/heavydrinker
    init: true
    tty: true
    restart: unless-stopped
    environment:
      APP: "coffee-drinkers"
      CLUSTER: "1"
      DATABASE: "coffee-drinkers-heavydrinker"
      LIBRARY: "/app/lib"
      LOG_LEVEL: "info"
      SERVICE_NAME: "Service::HeavyDrinker"
      TRANSPORT: "redis://redis-node-0:6379"
    networks:
      - default
      - backend
      - redis
      - database
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
    volumes:
      - ./services/coffee-drinkers/heavydrinker:/app/
      - ./pg_service.conf:/root/.pg_service.conf:ro

  # Dedicated Database for each service.

#  pg-coffee-drinkers-heavydrinker:
#    image: docker.io/bitnami/postgresql-repmgr:13-debian-10
#    ports:
#      - 5432
#    volumes:
#      - pg-coffee-drinkers-heavydrinker-data:/bitnami/postgresql
#    networks:
#      - database
#    environment:
#      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
#      - POSTGRESQL_USERNAME=customuser
#      - POSTGRESQL_PASSWORD=custompassword
#      - POSTGRESQL_DATABASE=customdatabase

  # End list of services

volumes:
  redis-cluster_data-0:
  redis-cluster_data-1:
  redis-cluster_data-2:
  redis-cluster_data-3:
  redis-cluster_data-4:
  redis-cluster_data-5:
  pg-caffeine-manager-api-data:
  pg-caffeine-manager-coffee-data:
  pg-caffeine-manager-machine-data:
  pg-caffeine-manager-stats-data:
  pg-caffeine-manager-user-data:
  pg-coffee-drinkers-heavydrinker-data:

networks:
  default:
  backend:
  database:
  redis:
